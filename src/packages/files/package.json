{
    "documentation": "\n  The files packages provides an API to interact with the file system. Files can\n  be read, written to and deleted. Moreover, the [[📑]] class provides class\n  methods to work with directories, create symbolic links etc.\n",
    "types": [
        {
            "type": "Enumeration",
            "name": "🌧",
            "conformances": [],
            "genericParameters": [],
            "documentation": " Errors ",
            "methods": [],
            "initializers": [],
            "typeMethods": [],
            "enumerationValues": [
                {
                    "documentation": " Function not supported. ",
                    "value": "⛔"
                },
                {
                    "documentation": " Not enough space. ",
                    "value": "🐁"
                },
                {
                    "documentation": " Indicates a generic error. ",
                    "value": "🔴"
                },
                {
                    "documentation": " Result too large. ",
                    "value": "🗻"
                },
                {
                    "documentation": " File exists ",
                    "value": "🗿"
                },
                {
                    "documentation": " Permission denied ",
                    "value": "🚧"
                },
                {
                    "documentation": " Invalid argument. ",
                    "value": "🚯"
                },
                {
                    "documentation": " Mathematics argument out of domain of function. ",
                    "value": "🚳"
                },
                {
                    "documentation": " Operation not permitted. ",
                    "value": "🚷"
                },
                {
                    "documentation": " Illegal byte sequence. ",
                    "value": "🛃"
                }
            ]
        },
        {
            "type": "Value Type",
            "name": "📑",
            "conformances": [],
            "genericParameters": [],
            "documentation": "\n    The 📑 class has many class methods which allow you to work with the file\n    system.\n\n    See the 📄 class for reading and writing.\n",
            "methods": [],
            "initializers": [],
            "typeMethods": [
                {
                    "name": "📁",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "Optional",
                        "arguments": [
                            {
                                "package": "files",
                                "name": "🌧",
                                "arguments": []
                            }
                        ]
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": "\n    This method creates a directory at the given path.\n    If the directory already exists an error is returned.\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "path"
                        }
                    ]
                },
                {
                    "name": "🔫",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "Optional",
                        "arguments": [
                            {
                                "package": "files",
                                "name": "🌧",
                                "arguments": []
                            }
                        ]
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": "\n    This method deletes the file at the given path.\n    >!N This method may not be used to delete directories.\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "path"
                        }
                    ]
                },
                {
                    "name": "🔥",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "Optional",
                        "arguments": [
                            {
                                "package": "files",
                                "name": "🌧",
                                "arguments": []
                            }
                        ]
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": "\n    This method deletes an *empty* directory at the given path.\n    If you need to delete a whole directory hierarchy use 💣.\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "path"
                        }
                    ]
                },
                {
                    "name": "💣",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "Optional",
                        "arguments": [
                            {
                                "package": "files",
                                "name": "🌧",
                                "arguments": []
                            }
                        ]
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": "\n    This method deletes an directory with its content. The method recursively\n    descends the directory hierarchy and deletes every file or directory it\n    finds. Once finished, it deletes the directory itself.\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "path"
                        }
                    ]
                },
                {
                    "name": "🔗",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "Optional",
                        "arguments": [
                            {
                                "package": "files",
                                "name": "🌧",
                                "arguments": []
                            }
                        ]
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": " This method creates a symbolic link to another. ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "originalFile"
                        },
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "destination"
                        }
                    ]
                },
                {
                    "name": "📃",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "package": "s",
                        "name": "👌",
                        "arguments": []
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": " Determines whether a file exists at the given path. ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "path"
                        }
                    ]
                },
                {
                    "name": "📜",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "package": "s",
                        "name": "👌",
                        "arguments": []
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": "\n    Determines whether a file exists and the given path and if it is readable.\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "path"
                        }
                    ]
                },
                {
                    "name": "📝",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "package": "s",
                        "name": "👌",
                        "arguments": []
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": "\n    Determines whether a file exists and the given path and if it is writeable.\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "path"
                        }
                    ]
                },
                {
                    "name": "👟",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "package": "s",
                        "name": "👌",
                        "arguments": []
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": "\n    Determines whether a file exists and the given path and if it is executable.\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "path"
                        }
                    ]
                },
                {
                    "name": "📏",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "Error",
                        "arguments": [
                            {
                                "package": "files",
                                "name": "🌧",
                                "arguments": []
                            },
                            {
                                "package": "s",
                                "name": "🔢",
                                "arguments": []
                            }
                        ]
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": "\n    Determines the size of a file at a given path. If the file cannot be found\n    or any other error occurs the method returns -1.\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "path"
                        }
                    ]
                },
                {
                    "name": "⛓",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "Error",
                        "arguments": [
                            {
                                "package": "files",
                                "name": "🌧",
                                "arguments": []
                            },
                            {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            }
                        ]
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": "\n    Returns an absolute pathname derived from `path` that\n    resolves to the same directory entry, whose resolution does not involve `.`,\n    `..`, or symbolic links. On failure Nothingness is returned.\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "path"
                        }
                    ]
                }
            ]
        },
        {
            "type": "Class",
            "name": "📄",
            "conformances": [],
            "genericParameters": [],
            "documentation": "\n    The 📄 class allows you to read and write to files.\n\n    It provides several class methods which are shortcuts to reading and\n    writing. They operate always on the whole file and reading can be very\n    inefficient using these shortcuts when working with big files, because they\n    will read the whole file into memory.\n\n    You must close files openend with 📝 and 📜 appropriately with 🙅 when they\n    are no longer needed.\n",
            "methods": [
                {
                    "name": "✏",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "Optional",
                        "arguments": [
                            {
                                "package": "files",
                                "name": "🌧",
                                "arguments": []
                            }
                        ]
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": " Write the data at the current file pointer position. ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "📇",
                                "arguments": []
                            },
                            "name": "data"
                        }
                    ]
                },
                {
                    "name": "📓",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "Error",
                        "arguments": [
                            {
                                "package": "files",
                                "name": "🌧",
                                "arguments": []
                            },
                            {
                                "package": "s",
                                "name": "📇",
                                "arguments": []
                            }
                        ]
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": "\n    Reads as many bytes as specified from the file pointer position.\n\n    Keep in mind that a byte is not equal to one character!\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔢",
                                "arguments": []
                            },
                            "name": "bytesToRead"
                        }
                    ]
                },
                {
                    "name": "🔚",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "NoReturn"
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": " Seeks the file pointer to the end of the file. ",
                    "parameters": []
                },
                {
                    "name": "🔛",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "NoReturn"
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": " Seeks the file pointer to the given position. ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔢",
                                "arguments": []
                            },
                            "name": "position"
                        }
                    ]
                },
                {
                    "name": "💧",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "NoReturn"
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": " Causes any buffered unwritten data to be written to the file. ",
                    "parameters": []
                },
                {
                    "name": "🚪",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "NoReturn"
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": " Closes the file. Reading or writing thereafter is undefined behavior. ",
                    "parameters": []
                }
            ],
            "initializers": [
                {
                    "name": "📝",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "errorType": {
                        "package": "files",
                        "name": "🌧",
                        "arguments": []
                    },
                    "genericParameters": [],
                    "documentation": "\n    Opens the file at the given path for writing. The file pointer is set to the\n    beginning of the file and the file is truncated to zero length or created.\n\n    This initializer returns nothingness if the file can not be opened for some\n    reason. In many cases this occurs when you don’t have the permission to\n    create or open the file.\n\n    You cannot read from a file opened with this initializer.\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "message"
                        }
                    ]
                },
                {
                    "name": "📜",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "errorType": {
                        "package": "files",
                        "name": "🌧",
                        "arguments": []
                    },
                    "genericParameters": [],
                    "documentation": "\n    Opens the file at the given path for reading. The file pointer is set to the\n    beginning of the file.\n\n    This initializer returns nothingness if the file can not be opened for some\n    reason. In many cases this occurs when you don’t have the permission to open\n    the file or when it does not exist.\n\n    You cannot write to a file opened with this initializer.\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "message"
                        }
                    ]
                }
            ],
            "typeMethods": [
                {
                    "name": "📻",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "Optional",
                        "arguments": [
                            {
                                "package": "files",
                                "name": "🌧",
                                "arguments": []
                            }
                        ]
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": "\n    This class method tries to write the given 📇 to the given path. If the file\n    already exists, it will be overwritten.\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "path"
                        },
                        {
                            "type": {
                                "package": "s",
                                "name": "📇",
                                "arguments": []
                            },
                            "name": "data"
                        }
                    ]
                },
                {
                    "name": "📇",
                    "accessLevel": "🔓",
                    "unsafe": false,
                    "mutating": true,
                    "final": false,
                    "returnType": {
                        "type": "Error",
                        "arguments": [
                            {
                                "package": "files",
                                "name": "🌧",
                                "arguments": []
                            },
                            {
                                "package": "s",
                                "name": "📇",
                                "arguments": []
                            }
                        ]
                    },
                    "mood": "❗️",
                    "genericParameters": [],
                    "documentation": "\n    This class method tries to read the file at given path `path` and returns\n    a 📇 object representing its content on success. On failure Nothingness\n    is returned.\n  ",
                    "parameters": [
                        {
                            "type": {
                                "package": "s",
                                "name": "🔡",
                                "arguments": []
                            },
                            "name": "path"
                        }
                    ]
                }
            ],
            "final": false
        }
    ]
}
